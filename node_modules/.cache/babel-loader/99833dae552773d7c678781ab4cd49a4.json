{"ast":null,"code":"var _jsxFileName = \"/Users/evan/now-ui-kit-react-master/src/views/middleconnect/connectPython.js\";\nimport React from 'react';\nimport { PythonShell } from 'python-shell'; // const filePath = '../../pythonSh/index.py'\n\nclass ConnectPython extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  runTest() {\n    // PythonShell.run(filePath, null, function (err) {\n    //     if (err) throw err;\n    //     console.log('finished');\n    //   });\n    const fileName = 'index.py'; // var PythonShell = require('python-shell');\n\n    var options = {\n      mode: 'text',\n      pythonPath: '/usr/bin/python3',\n      pythonOptions: ['-u'],\n      // make sure you use an absolute path for scriptPath\n      scriptPath: '../../pythonSh/',\n      args: ['value1', 'value2', 'value3']\n    };\n    console.log(\"###\");\n    PythonShell.run(fileName, options, function (err, results) {\n      if (err) throw err; // results is an array consisting of messages collected during execution\n\n      console.log('results: %j', results);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.runTest(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, \"test\"));\n  }\n\n}\n\nexport default ConnectPython;","map":{"version":3,"sources":["/Users/evan/now-ui-kit-react-master/src/views/middleconnect/connectPython.js"],"names":["React","PythonShell","ConnectPython","Component","constructor","props","runTest","fileName","options","mode","pythonPath","pythonOptions","scriptPath","args","console","log","run","err","results","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,cAA1B,C,CACA;;AAOA,MAAMC,aAAN,SAA4BF,KAAK,CAACG,SAAlC,CAA4C;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACH;;AAEDC,EAAAA,OAAO,GAAG;AACN;AACA;AACA;AACA;AAEA,UAAMC,QAAQ,GAAG,UAAjB,CANM,CAON;;AAEA,QAAIC,OAAO,GAAG;AACZC,MAAAA,IAAI,EAAE,MADM;AAEZC,MAAAA,UAAU,EAAE,kBAFA;AAGZC,MAAAA,aAAa,EAAE,CAAC,IAAD,CAHH;AAIZ;AACAC,MAAAA,UAAU,EAAE,iBALA;AAMZC,MAAAA,IAAI,EAAE,CAAC,QAAD,EAAW,QAAX,EAAqB,QAArB;AANM,KAAd;AAQAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAd,IAAAA,WAAW,CAACe,GAAZ,CAAgBT,QAAhB,EAA0BC,OAA1B,EAAmC,UAAUS,GAAV,EAAeC,OAAf,EAAwB;AACzD,UAAID,GAAJ,EAAS,MAAMA,GAAN,CADgD,CAEzD;;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BG,OAA3B;AACD,KAJD;AAMH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI,uDACI;AAAQ,MAAA,OAAO,EAAE,KAAKb,OAAL,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CADJ;AAMH;;AAtCuC;;AAwC5C,eAAeJ,aAAf","sourcesContent":["import React from 'react'\nimport {PythonShell} from 'python-shell';\n// const filePath = '../../pythonSh/index.py'\n\n\n\n\n\n\nclass ConnectPython extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n\n    runTest() {\n        // PythonShell.run(filePath, null, function (err) {\n        //     if (err) throw err;\n        //     console.log('finished');\n        //   });\n\n        const fileName = 'index.py'\n        // var PythonShell = require('python-shell');\n\n        var options = {\n          mode: 'text',\n          pythonPath: '/usr/bin/python3', \n          pythonOptions: ['-u'],\n          // make sure you use an absolute path for scriptPath\n          scriptPath: '../../pythonSh/',\n          args: ['value1', 'value2', 'value3']\n        };\n        console.log(\"###\")\n        PythonShell.run(fileName, options, function (err, results) {\n          if (err) throw err;\n          // results is an array consisting of messages collected during execution\n          console.log('results: %j', results);\n        });\n\n    }\n\n    render() {\n        return (\n            <>\n                <button onClick={this.runTest()}>test</button>\n\n            </>\n        )\n    }\n}\nexport default ConnectPython\n"]},"metadata":{},"sourceType":"module"}