{"ast":null,"code":"// const exec = require('child_process').exec;\n// const execSync = require('child_process').execSync;\nconst filePath = '../../pythonSh/index.py'; // exec(filePath,function(error,stdout,stderr){\n//     if(error) {\n//         console.info('stderr : '+stderr);\n//     }\n//     console.log('exec: ' + stdout);\n// })\n\nconst express = require('express');\n\nconst app = express();\napp.get('/', (req, res) => {\n  const {\n    spawn\n  } = require('child_process');\n\n  const pyProg = spawn('python', [filePath]);\n  pyProg.stdout.on('data', function (data) {\n    console.log(data.toString());\n    res.write(data);\n    res.end('end');\n  });\n});\napp.listen(3001, () => console.log('Application listening on port 3001!')); // import React from 'react'\n// import {PythonShell} from 'python-shell';\n// const filePath = '../../pythonSh/index.py'\n// const {PythonShell} = require( 'python-shell');\n// const PythonShell = require('python-shell').PythonShell;\n// class ConnectPython extends React.Component {\n//     runTest() {\n//     }\n//     render() {\n//         return (\n//             <>\n//                 <button onClick={this.runTest()}>test</button>\n//             </>\n//         )\n//     }\n// }\n// export default ConnectPython\n// import {PythonShell} from 'python-shell';\n// const fileName = 'index.py'\n// function PythonShell () {\n//     var options = {\n//         mode: 'text',\n//         pythonPath: '/usr/bin/python3', \n//         pythonOptions: ['-u'],\n//         // make sure you use an absolute path for scriptPath\n//         scriptPath: '../../pythonSh/',\n//         args: ['value1', 'value2', 'value3']\n//       };\n//       PythonShell.run(fileName, options, function (err, results) {\n//         if (err) throw err;\n//         // results is an array consisting of messages collected during execution\n//         console.log('results: %j', results);\n//       });\n// }\n// export default PythonShell","map":{"version":3,"sources":["/Users/evan/now-ui-kit-react-master/src/views/middleconnect/connectPython.js"],"names":["filePath","express","require","app","get","req","res","spawn","pyProg","stdout","on","data","console","log","toString","write","end","listen"],"mappings":"AAAA;AACA;AACA,MAAMA,QAAQ,GAAG,yBAAjB,C,CAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,GAAG,GAAGF,OAAO,EAAnB;AAEAE,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAa,CAACC,GAAD,EAAMC,GAAN,KAAc;AAEvB,QAAM;AAAEC,IAAAA;AAAF,MAAYL,OAAO,CAAC,eAAD,CAAzB;;AACA,QAAMM,MAAM,GAAGD,KAAK,CAAC,QAAD,EAAW,CAACP,QAAD,CAAX,CAApB;AAEAQ,EAAAA,MAAM,CAACC,MAAP,CAAcC,EAAd,CAAiB,MAAjB,EAAyB,UAASC,IAAT,EAAe;AAEpCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,QAAL,EAAZ;AACAR,IAAAA,GAAG,CAACS,KAAJ,CAAUJ,IAAV;AACAL,IAAAA,GAAG,CAACU,GAAJ,CAAQ,KAAR;AACH,GALD;AAMH,CAXD;AAaAb,GAAG,CAACc,MAAJ,CAAW,IAAX,EAAiB,MAAML,OAAO,CAACC,GAAR,CAAY,qCAAZ,CAAvB,E,CAGA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// const exec = require('child_process').exec;\n// const execSync = require('child_process').execSync;\nconst filePath = '../../pythonSh/index.py'\n\n// exec(filePath,function(error,stdout,stderr){\n//     if(error) {\n//         console.info('stderr : '+stderr);\n//     }\n//     console.log('exec: ' + stdout);\n// })\n\nconst express = require('express')\nconst app = express()\n\napp.get('/', (req, res) => {\n\n    const { spawn } = require('child_process');\n    const pyProg = spawn('python', [filePath]);\n\n    pyProg.stdout.on('data', function(data) {\n\n        console.log(data.toString());\n        res.write(data);\n        res.end('end');\n    });\n})\n\napp.listen(3001, () => console.log('Application listening on port 3001!'))\n\n\n// import React from 'react'\n// import {PythonShell} from 'python-shell';\n// const filePath = '../../pythonSh/index.py'\n\n// const {PythonShell} = require( 'python-shell');\n// const PythonShell = require('python-shell').PythonShell;\n\n// class ConnectPython extends React.Component {\n\n//     runTest() {\n\n\n//     }\n\n//     render() {\n//         return (\n//             <>\n//                 <button onClick={this.runTest()}>test</button>\n\n//             </>\n//         )\n//     }\n// }\n// export default ConnectPython\n\n\n// import {PythonShell} from 'python-shell';\n// const fileName = 'index.py'\n// function PythonShell () {\n//     var options = {\n//         mode: 'text',\n//         pythonPath: '/usr/bin/python3', \n//         pythonOptions: ['-u'],\n//         // make sure you use an absolute path for scriptPath\n//         scriptPath: '../../pythonSh/',\n//         args: ['value1', 'value2', 'value3']\n//       };\n//       PythonShell.run(fileName, options, function (err, results) {\n//         if (err) throw err;\n//         // results is an array consisting of messages collected during execution\n//         console.log('results: %j', results);\n//       });\n// }\n// export default PythonShell"]},"metadata":{},"sourceType":"module"}