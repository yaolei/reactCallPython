{"ast":null,"code":"const exec = require('child_process').exec;\n\nconst execSync = require('child_process').execSync;\n\nconst filePath = '../../pythonSh/index.py';\ndebugger;\nexec(filePath, function (error, stdout, stderr) {\n  if (error) {\n    console.info('stderr : ' + stderr);\n  }\n\n  console.log('exec: ' + stdout);\n}); // import React from 'react'\n// import {PythonShell} from 'python-shell';\n// const filePath = '../../pythonSh/index.py'\n// const {PythonShell} = require( 'python-shell');\n// const PythonShell = require('python-shell').PythonShell;\n// class ConnectPython extends React.Component {\n//     runTest() {\n//     }\n//     render() {\n//         return (\n//             <>\n//                 <button onClick={this.runTest()}>test</button>\n//             </>\n//         )\n//     }\n// }\n// export default ConnectPython\n// import {PythonShell} from 'python-shell';\n// const fileName = 'index.py'\n// function PythonShell () {\n//     var options = {\n//         mode: 'text',\n//         pythonPath: '/usr/bin/python3', \n//         pythonOptions: ['-u'],\n//         // make sure you use an absolute path for scriptPath\n//         scriptPath: '../../pythonSh/',\n//         args: ['value1', 'value2', 'value3']\n//       };\n//       PythonShell.run(fileName, options, function (err, results) {\n//         if (err) throw err;\n//         // results is an array consisting of messages collected during execution\n//         console.log('results: %j', results);\n//       });\n// }\n// export default PythonShell","map":{"version":3,"sources":["/Users/evan/now-ui-kit-react-master/src/views/middleconnect/connectPython.js"],"names":["exec","require","execSync","filePath","error","stdout","stderr","console","info","log"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,eAAD,CAAP,CAAyBD,IAAtC;;AACA,MAAME,QAAQ,GAAGD,OAAO,CAAC,eAAD,CAAP,CAAyBC,QAA1C;;AACA,MAAMC,QAAQ,GAAG,yBAAjB;AAEA;AAEAH,IAAI,CAACG,QAAD,EAAU,UAASC,KAAT,EAAeC,MAAf,EAAsBC,MAAtB,EAA6B;AACvC,MAAGF,KAAH,EAAU;AACNG,IAAAA,OAAO,CAACC,IAAR,CAAa,cAAYF,MAAzB;AACH;;AACDC,EAAAA,OAAO,CAACE,GAAR,CAAY,WAAWJ,MAAvB;AACH,CALG,CAAJ,C,CAWA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["const exec = require('child_process').exec;\nconst execSync = require('child_process').execSync;\nconst filePath = '../../pythonSh/index.py'\n\ndebugger\n\nexec(filePath,function(error,stdout,stderr){\n    if(error) {\n        console.info('stderr : '+stderr);\n    }\n    console.log('exec: ' + stdout);\n})\n\n\n\n\n\n// import React from 'react'\n// import {PythonShell} from 'python-shell';\n// const filePath = '../../pythonSh/index.py'\n\n// const {PythonShell} = require( 'python-shell');\n// const PythonShell = require('python-shell').PythonShell;\n\n// class ConnectPython extends React.Component {\n\n//     runTest() {\n\n\n//     }\n\n//     render() {\n//         return (\n//             <>\n//                 <button onClick={this.runTest()}>test</button>\n\n//             </>\n//         )\n//     }\n// }\n// export default ConnectPython\n\n\n// import {PythonShell} from 'python-shell';\n// const fileName = 'index.py'\n// function PythonShell () {\n//     var options = {\n//         mode: 'text',\n//         pythonPath: '/usr/bin/python3', \n//         pythonOptions: ['-u'],\n//         // make sure you use an absolute path for scriptPath\n//         scriptPath: '../../pythonSh/',\n//         args: ['value1', 'value2', 'value3']\n//       };\n//       PythonShell.run(fileName, options, function (err, results) {\n//         if (err) throw err;\n//         // results is an array consisting of messages collected during execution\n//         console.log('results: %j', results);\n//       });\n// }\n// export default PythonShell"]},"metadata":{},"sourceType":"module"}